openapi: 3.0.3
info:
  title: Adron Bot Manager Swagger
  description: |-
    Документация API модуля управления жизненным циклом ботов
  version: 1.0.0
tags:
  - name: Bots
    description: Bot Lifecycle Processing
  - name: Orders
    description: Bot Orders Management

security:
  - OAuth2_Local: []
  - OAuth2_Integration: []
paths:
  /bots/{botId}:
    get:
      tags:
        - Bots
      summary: Get bot info (detailed)
      description: Returns bot detailed information
      operationId: botsBotIdByGet
      security:
        - OAuth2_Local: []
        - OAuth2_Integration: []
      parameters:
        - $ref: '#/components/parameters/BotIdPath'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotInfo'
        '400':
          description: Bad Request/Internal Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
  /bots/types:
    get:
      tags:
        - Bots
      summary: Get bot types
      description: Returns short bot info grouped by types
      operationId: botsTypeByGet
      security:
        - OAuth2_Local: []
        - OAuth2_Integration: []
      parameters:
        - $ref: '#/components/parameters/ProfileIdQueryRequired'
        - $ref: '#/components/parameters/AccountIdQueryRequired'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotTypesResponse'
        '400':
          description: Bad Request/Internal Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
  /bots:
    get:
      tags:
        - Bots
      summary: Get bot page by param
      description: |
        Returns page with bots searched by SINGLE parameter
        Available sorting keys for all statuses: realizedPnl, totalInvestment; ACTIVE: createdAt; ARCHIVED: closeTime
      operationId: botsByGet
      security:
        - OAuth2_Local: []
        - OAuth2_Integration: []
      parameters:
        - $ref: '#/components/parameters/ProfileIdQuery'
        - $ref: '#/components/parameters/AccountIdQuery'
        - $ref: '#/components/parameters/TypeQuery'
        - $ref: '#/components/parameters/StatusQuery'
        - $ref: '#/components/parameters/PageQuery'
        - $ref: '#/components/parameters/SizeQuery'
        - $ref: '#/components/parameters/SortBotsQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotListResponse'
        '400':
          description: Bad Request/Internal Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
    post:
      tags:
        - Bots
      summary: Create new bot
      description: Creates new bot with requested parameters
      operationId: botsByPost
      security:
        - OAuth2_Local: []
        - OAuth2_Integration: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BotCreationRequest'
      responses:
        '201':
          description: Successful operation
        '400':
          description: Bad Request/Internal Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
  /bots/strategy/{id}:
    get:
      tags:
        - Bots
      summary: Get all bots by requested strategy
      description: Returns list of bots initialized by requested strategy
      operationId: botsStrategyIdByGet
      security:
        - OAuth2_Local: [ ]
        - OAuth2_Integration: [ ]
      parameters:
        - $ref: '#/components/parameters/IdPathRequired'
        - $ref: '#/components/parameters/PageQuery'
        - $ref: '#/components/parameters/SizeQuery'
        - $ref: '#/components/parameters/SortBotsStrategyIdQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotListResponse'
        '400':
          description: Bad Request/Internal Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
  /bots/check-creation:
    get:
      tags:
        - Bots
      summary: Get bot creation availability
      description: Convinces the user of creation availability
      operationId: botsCheckCreationByGet
      security:
        - OAuth2_Local: []
        - OAuth2_Integration: []
      parameters:
        - $ref: '#/components/parameters/ProfileIdQueryRequired'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotCheckAvailabilityResponse'
        '400':
          description: Bad Request/Internal Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
  /bots/check-strategy-timeframe:
    post:
      tags:
        - Bots
      summary: Check strategy is active
      description: Checks if strategy on requested timeframe is already processing
      operationId: botsCheckStrategyRelationByPost
      security:
        - OAuth2_Local: [ ]
        - OAuth2_Integration: [ ]
      parameters:
        - $ref: '#/components/parameters/StrategyIdRequired'
        - $ref: '#/components/parameters/TimeframeRequired'
        - $ref: '#/components/parameters/MinPriceRequired'
        - $ref: '#/components/parameters/MaxPriceRequired'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckStrategyTimeframeResponse'
        '400':
          description: Bad Request/Internal Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
  /bots/check-account-deletion:
    get:
      tags:
        - Bots
      summary: Get bot deletion availability
      description: Convinces the user of account deletion availability
      operationId: botsCheckAccountDeletionByGet
      security:
        - OAuth2_Local: []
        - OAuth2_Integration: []
      parameters:
        - $ref: '#/components/parameters/AccountIdQueryRequired'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckAccountDeletionResponse'
        '400':
          description: Bad Request/Internal Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error

  /bots/cycling:
    post:
      tags:
        - Bots
      summary: Request bots for cycling
      description: Returns bot that is ready for cycling and links it to requesting server
      operationId: botsCyclingByPost
      parameters:
        - name: limit
          in: query
          description: Bot list limit
          required: false
          schema:
            type: integer
            example: 10
            nullable: false
            default: 1
        - $ref: '#/components/parameters/ExchangeQueryRequired'
        - name: id
          in: query
          description: Bot id
          required: false
          schema:
            type: string
            format: uuid
            example: 0bea0433-d45f-42dc-9acd-externalf21550a352
            nullable: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotsCyclingResponse'
        '400':
          description: Bad Request/Internal Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
  /bots/{botId}/close:
    post:
      tags:
        - Bots
      summary: Request bot closing
      description: Validates and resends request to engine
      operationId: botsCloseByPost
      security:
        - OAuth2_Local: []
        - OAuth2_Integration: []
      parameters:
        - $ref: '#/components/parameters/BotIdPath'
        - $ref: '#/components/parameters/ProfileIdQueryRequired'
        - $ref: '#/components/parameters/AccountIdQueryRequired'
        - name: closeOption
          in: query
          description: Strategy of bot closing
          required: true
          schema:
            $ref: '#/components/schemas/BotCloseOptionEnum'
      responses:
        '204':
          description: OK
        '400':
          description: Bad Request/Internal Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
  /bots/credentials:
    patch:
      tags:
        - Bots
      summary: Edit bots credentials by accountId
      description: Finds bots by on request account and updates it's credentials
      operationId: botsCredentialsByPatch
      security:
        - OAuth2_Local: []
        - OAuth2_Integration: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchCredentialsRequest'
      responses:
        '202':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchCredentialsResponse'
        '400':
          description: Bad Request/Internal Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
  /orders:
    get:
      tags:
        - Orders
      summary: Get orders by bot id
      description: Returns all orders for a specific bot
      operationId: ordersByGet
      parameters:
        - name: botId
          in: query
          required: true
          description: Bot ID
          example: 729478d7-3b16-40b3-be0d-3203167bexternal6f
          schema:
            type: string
            format: uuid
            nullable: false
        - name: market
          in: query
          required: true
          description: Bot ID
          example: 729478d7-3b16-40b3-be0d-3203167bexternal6f
          schema:
            type: string
            nullable: false
        - $ref: '#/components/parameters/PageQuery'
        - $ref: '#/components/parameters/SizeQuery'
        - $ref: '#/components/parameters/SortOrdersQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersResponse'
        '400':
          description: Bad Request/Internal Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
    post:
      tags:
        - Orders
      summary: Post new orders
      description: Inserts new orders
      operationId: ordersByPost
      parameters:
        - $ref: '#/components/parameters/BotIdQuery'
        - $ref: '#/components/parameters/AccountIdQueryRequired'
        - $ref: '#/components/parameters/ExchangeQuery'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersPostRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersPostResponse'
        '400':
          description: Bad Request/Internal Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
    patch:
      tags:
        - Orders
      summary: Update orders
      description: Updates existing orders and recalculates bot metrics
      operationId: ordersByPatch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersPatchRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: uuid
                example: 764f861e-f4c1-48d3-9f83-6c8a13ac6f43
                description: Updated Order ID
        '400':
          description: Bad Request/Internal Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
  /orders/information.csv:
    get:
      tags:
        - Orders
      summary: Get orders info from csv
      operationId: ordersCsvByGet
      parameters:
        - $ref: '#/components/parameters/BotIdQuery'
        - $ref: '#/components/parameters/AccountIdQueryRequired'
      responses:
        '200':
          description: A CSV file is returned
          content:
            text/csv:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              description: Indication that the response is a file download
              schema:
                type: string
                example: attachment; filename=table.csv
        '400':
          description: Bad Request/Internal Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  securitySchemes:
    OAuth2_Local:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: http://localhost:8444/realms/local/protocol/openid-connect/token
          scopes: { }

    OAuth2_Integration:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://adrontest.com:9443/realms/adron-test/protocol/openid-connect/token
          scopes: { }

  parameters:
    StatusQuery:
      in: query
      name: status
      required: false
      description: Bot status query param
      example: ACTIVE
      schema:
        $ref: '#/components/schemas/BotUIStatus'
    TypeQuery:
      in: query
      name: type
      required: true
      description: Bot type query param
      example: FUTURES_GRID
      schema:
        $ref: '#/components/schemas/BotType'
    BotIdPath:
      in: path
      name: botId
      description: Bot ID
      required: true
      schema:
        type: string
        format: uuid
        example: 7da6038d-fc4f-48d7-8110-71a53206967c
    StrategyIdPath:
      in: path
      name: strategyId
      description: Strategy ID
      required: true
      schema:
        type: string
        format: uuid
        example: 7da6038d-fc4f-48d7-8110-71a53206967c
        nullable: false
    BotIdQuery:
      in: query
      name: botId
      description: Bot ID
      required: true
      schema:
        type: string
        format: uuid
        example: 7da6038d-fc4f-48d7-8110-71a53206967c
        nullable: false
    ExchangeQueryRequired:
      in: query
      name: exchange
      description: Exchange name
      required: true
      schema:
        $ref: '#/components/schemas/ExchangeEnum'
        example: BYBIT
    ExchangeQuery:
      in: query
      name: exchange
      description: Exchange name
      required: true
      schema:
        type: string
        example: BYBIT
        nullable: false
    ProfileIdQueryRequired:
      in: query
      name: profileId
      required: true
      description: Profile ID
      schema:
        type: string
        format: uuid
        example: 7da6038d-fc4f-48d7-8110-71a53206967c
        nullable: false
    ProfileIdQuery:
      in: query
      name: profileId
      required: false
      description: Profile ID
      schema:
        type: string
        format: uuid
        example: 7da6038d-fc4f-48d7-8110-71a53206967c
        nullable: false
    AccountIdQuery:
      in: query
      name: accountId
      required: false
      description: Account ID
      schema:
        type: string
        format: uuid
        example: 7da6038d-fc4f-48d7-8110-71a53206967c
        nullable: false
    AccountIdQueryRequired:
      in: query
      name: accountId
      description: Account ID
      required: true
      schema:
        type: string
        format: uuid
        example: 7da6038d-fc4f-48d7-8110-71a53206967c
        nullable: false
    IdPathRequired:
      in: path
      name: id
      description: ID path required
      required: true
      schema:
        type: string
        format: uuid
        example: 7da6038d-fc4f-48d7-8110-71a53206967c
        nullable: false
    StrategyIdRequired:
      in: query
      name: strategyId
      description: Strategy ID
      required: true
      schema:
        type: string
        format: uuid
        example: 7da6038d-fc4f-48d7-8110-71a53206967c
        nullable: false
    TimeframeRequired:
      in: query
      name: timeframe
      description: Timeframe
      required: true
      schema:
        type: string
        example: FIVE_MINUTES
        nullable: false
    MinPriceRequired:
      in: query
      name: minPrice
      description: Min Price
      required: true
      schema:
        type: number
        example: 123.45
        nullable: false
    MaxPriceRequired:
      in: query
      name: maxPrice
      description: Max Price
      required: true
      schema:
        type: number
        example: 123.45
        nullable: false
    PageQuery:
      name: page
      in: query
      description: Page number starting with 0 (0 by default)
      required: false
      schema:
        type: integer
        example: 0
        default: 0
        nullable: false
    SortBotsStrategyIdQuery:
      name: sort
      in: query
      description: Page items order (array of string pairs)
      required: false
      schema:
        type: array
        items:
          type: string
        example:
          - createdAt:asc
          - initialAmountQuote:desc
          - closeTime:desc
          - status:asc
    SortBotsQuery:
      name: sort
      in: query
      description: Page items order (array of string pairs)
      required: false
      schema:
        type: array
        items:
          type: string
        example:
          - initialAmountQuote:asc
          - realizedPnl:desc
          - createdAt:desc
          - closeTime:desc
    SortOrdersQuery:
      name: sort
      in: query
      description: Page items order (array of string pairs)
      required: false
      schema:
        type: array
        items:
          type: string
        example:
          - updatedAt:asc
    SizeQuery:
      name: size
      in: query
      description: Amount of items on one page (20 by default)
      required: false
      schema:
        type: integer
        example: 20
        default: 20
        nullable: false
  schemas:
    BotCloseOptionEnum:
      type: string
      example: SIMPLE_STOP
      enum:
        - SIMPLE_STOP
        - STOP_AND_CLOSE_POSITION
        - NO_LOSS_STOP

    ErrorResponse:
      type: object
      required:
        - errorCode
        - message
        - detailedMessage
        - timestamp
      description: Controlled Error Response
      properties:
        errorCode:
          type: string
          description: Error Business Code
          example: AGS-08
        message:
          type: string
          description: Error Description
          example: Old password doesn't match
        timestamp:
          type: string
          description: When the controlled error was produced
          example: 2024-04-21T13:26:44.148
        args:
          type: object
          description: Dynamic parameters passes as Map<String, Any>
    BotUIStatus:
      type: string
      description: UI bot status
      example: ARCHIVED
      enum:
        - ACTIVE
        - ARCHIVED
    BotStatus:
      type: string
      description: Bot status enum
      example: NO_LOSS_CLOSING
      enum:
        - RUNNING
        - SHUTDOWN
        - OPENING
        - CLOSING
        - ERROR
        - NO_LOSS_CLOSING
        - WAITING_TO_BE_CLOSED
        - UNSUCCESSFUL_START
    BotType:
      type: string
      description: Bot category
      example: FUTURES_GRID
      enum:
        - FUTURES_GRID
        - SPOT_GRID

    OrdersPatchRequest:
      type: object
      required:
        - id
        - status
        - totalFees
        - currentOpenAmount
        - executedAmount
        - avgFillPrice
        - orderStepDecimals
        - priceStepDecimals
      properties:
        id:
          type: string
          format: uuid
          example: 72facdec-7cd2-401e-ae00-2cefd8c8bfeb
          description: Order ID
        status:
          $ref: '#/components/schemas/OrderStatus'
        totalFees:
          type: number
          example: 0.1
          description: Current fees made by placing/executing this order
        currentOpenAmount:
          type: number
          example: 34.12
          description: Indicates non-executed order amount (used in case of partially executed orders)
        executedAmount:
          type: number
          example: 54.94
          description: Order executed amount
        avgFillPrice:
          type: number
          example: 39.52
          description: Average order fill price
        orderStepDecimals:
          type: integer
          example: 4
          description: Decimals to be rounded
        priceStepDecimals:
          type: integer
          example: 4
          description: Decimals to be rounded

    OrdersResponse:
      type: object
      required:
        - botId
        - market
        - orders
      properties:
        botId:
          type: string
          format: uuid
          example: 72facdec-7cd2-401e-ae00-2cefd8c8bfeb
          description: Bot Identifier
        market:
          type: string
          example: BYBIT
          description: Exchange name
        orders:
          type: array
          description: List of orders made by bot
          items:
            $ref: '#/components/schemas/OrderInfo'
        page:
          type: integer
          description: Requested page number (starting from 0)
          example: 0
        size:
          type: integer
          description: Amount of item on page
          example: 20
        sort:
          type: string
          description: Order of items on page
          example: '"[ status:asc, name:desc ]"'

    OrdersPostRequest:
      type: object
      required:
        - price
        - amount
        - type
        - status
        - side
        - priceType
        - correspondingOpenPrice
        - creationDate
        - externalOrderId
      properties:
        price:
          type: number
          example: 13.5
          description: On which price was the order made
        amount:
          type: number
          example: 145.90
          description: What amount of asset was ordered
        status:
          $ref: '#/components/schemas/OrderStatus'
        type:
          $ref: '#/components/schemas/OrderTypeEnum'
        side:
          type: string
          example: LONG
          description: Order side
          enum:
            - LONG
            - SHORT
        priceType:
          type: string
          example: LIMIT
          description: Type of order price
          enum:
            - LIMIT
            - MARKET
        correspondingOpenPrice:
          type: number
          example: 123.123
          description: Price of existing open corresponding order
        creationDate:
          type: string
          example: 2024-04-21T13:26:44.148
          description: Date of order creation
        externalOrderId:
          type: string
          example: ekdefwhyr2748tirjnr3bgfyui
          description: Order identifier on market
        matchingOpenOrderId:
          type: string
          example: bfd34644-dd73-4ab6-aac6-6ad36c5a37ae
          description: Corresponding open order id
        customSettingId:
          type: string
          description: Extra custom setting ID

    OrdersPostResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          example: 11a6a968-9bdc-4967-96e0-9858b41d8314
          description: Inserted Order ID

    OrderInfo:
      type: object
      required:
        - id
        - price
        - amount
        - type
        - status
        - side
        - currentOpenAmount
        - amountReplacedBySubstituteOrder
        - realizedPnl
        - fees
        - creationDate
        - externalOrderId
        - updateDate
        - avgFillPrice
      properties:
        id:
          type: string
          format: uuid
          example: 72facdec-7cd2-401e-ae00-2cefd8c8bfeb
          description: Order identifier
        price:
          type: number
          example: 13.5
          description: On which price was the order made
        amount:
          type: number
          example: 145.90
          description: What amount of asset was ordered
        status:
          $ref: '#/components/schemas/OrderStatus'
        type:
          $ref: '#/components/schemas/OrderTypeEnum'
        side:
          type: string
          example: LONG
          description: Order side
          enum:
            - LONG
            - SHORT
        priceType:
          type: string
          example: LIMIT
          description: Type of order price
          enum:
            - LIMIT
            - MARKET
        externalOrderId:
          type: string
          example: ekdefwhyr2748tirjnr3bgfyui
          description: Order identifier on market
        currentOpenAmount:
          type: number
          example: 34.12
          description: Indicates non-executed order amount (used in case of partially executed orders)
        amountReplacedBySubstituteOrder:
          type: number
          example: 81.94
          description: Indicates sum of amount of substitute orders (used in case of partially executed orders)
        realizedPnl:
          type: number
          example: 0.1
          description: Current profit made by placing/executing this order
        fees:
          type: number
          example: 0.1
          description: Current fees made by placing/executing this order
        matchingOpenOrderId:
          type: string
          example: be5f0536-6618-4caa-a2a8-f69908512df7
          description: Identifier of order representation on market
        creationDate:
          type: string
          format: date-time
          example: 2024-04-21T13:26:44.439
          description: Date and time when order was created
        updateDate:
          type: string
          format: date-time
          example: 2024-04-21T13:26:44.439
          description: Date and time when order was updated
        avgFillPrice:
          type: number
          example: 39.52
          description: Average order fill price

    BotInfo:
      type: object
      required:
        - id
        - displayedId
        - status
        - quote
        - base
        - minPrice
        - maxPrice
        - currentPositionBase
        - outOfRange
        - gridDirection
        - leverage
        - totalInvestment
        - initialAmountQuote
        - createdAt
        - accountId
        - gridsAmount
        - gridType
        - priceStep
        - priceStepPercentage
        - gridsCompleted
        - allGridsProfit
        - totalFees
        - totalProfit
        - realizedProfit
        - pnlPercentage
        - unrealizedPnl
        - fundingPnl
        - roi
        - runtime
        - apr
        - isAutoManaged
        - currentPosition
        - avgPositionOpeningPrice
        - orderAmount
      properties:
        id:
          type: string
          format: uuid
          example: 72facdec-7cd2-401e-ae00-2cefd8c8bfeb
          description: Bot identifier
        displayedId:
          type: string
          example: 72facdec
          description: UI-friendly bot identifier
        quote:
          type: string
          example: BTC
          description: Quote currency
        base:
          type: string
          example: USDT
          description: Base currency
        status:
          $ref: '#/components/schemas/BotStatus'
        minPrice:
          type: number
          default: Price range minimum value
          example: 64342.58
        maxPrice:
          type: number
          default: Price range maximum value
          example: 72548.11
        margin:
          type: number
          description: Margin value for futures bots
          example: 4624852.53
          default: null
        currentPositionQuote:
          type: number
          description: Value of current position in quote
          example: 72548.11
        currentPositionBase:
          type: number
          description: Value of current position in base
          example: 72548.11
        outOfRange:
          type: boolean
          description: Is current value outside min/max range
          example: false
        gridDirection:
          type: string
          example: LONG
          enum:
            - LONG
            - SHORT
            - CENTRAL
          description: Grid direction
        leverage:
          type: number
          description: Leverage value
          example: 5
          minimum: 0
        totalInvestment:
          type: number
          description: Investment value
          example: 32045.5
        createdAt:
          type: string
          description: Bot creation date
          example: 2024-08-20 09:33:17.416
        closeTime:
          type: string
          description: Bot close datetime
          example: 2024-08-20 09:33:17.416
        accountId:
          type: string
          format: uuid
          example: 72facdec-7cd2-401e-ae00-2cefd8c8bfeb
          description: Account identifier
        gridsAmount:
          type: integer
          description: Amount of grids
          example: 15
        gridType:
          type: string
          enum:
            - ARITHMETIC
            - GEOMETRIC
          description: Type of grid step
          example: ARITHMETIC
        priceStep:
          type: number
          description: Price step (depends on gridType)
          example: 10
        priceStepPercentage:
          type: string
          description: Range of price step values
          example: 3.33-5.55
        gridsCompleted:
          type: integer
          description: Amount of completed grids
          example: 100
        allGridsProfit:
          type: number
          description: Common profit of executed grids
          example: 123.45
        totalFees:
          type: number
          description: Common fees value for current bot
          example: 123.45
        totalProfit:
          type: number
          description: Common profit value for current bot
          example: 123.45
        realizedProfit:
          type: number
          description: Profit And Loss Value
          example: 543.12
        fundingPnl:
          type: number
          description: Funding Profit And Loss
          example: 123.45
        pnlPercentage:
          type: number
          default: Profit And Loss Percentage
          example: 0.45
        unrealizedPnl:
          type: number
          default: Unrealized Profit And Loss Value
          example: 0.45
        roi:
          type: number
          description: Return of Investment Value
          example: 15.99
        runtime:
          type: integer
          description: Days of bot running
          example: 15
        apr:
          type: number
          description: Annual percentage rate
          example: 123.45
        isAutoManaged:
          type: boolean
          description: Determines whether the bot was created manually or by strategy
          example: true
        currentPosition:
          type: number
          description: Signed value of current order position
          example: 123.45
        initialAmountQuote:
          type: number
          description: Initial amount in quote equivalent
          example: 123.45
          minimum: 0.0
        avgPositionOpeningPrice:
          type: number
          description: Bot's average position opening price on all orders
          example: 123.45
        orderAmount:
          type: number
          description: Bot's order amount
          example: 123.45
        timeframe:
          type: string
          description: Auto managed bot timeframe
          example: ONE_HOUR
        customGridSettings:
          type: array
          items:
            $ref: '#/components/schemas/CustomGridSettings'
        errorCode:
          type: string
          description: Error code
          example: BMNG_01

    BotListResponse:
      type: object
      required:
        - bots
        - page
      properties:
        bots:
          type: array
          description: List of bots
          items:
            $ref: '#/components/schemas/BotInfo'
        page:
          $ref: '#/components/schemas/Page'

    BotsCyclingResponse:
      type: object
      required:
        - bots
      properties:
        bots:
          type: array
          description: List of bots
          items:
            $ref: '#/components/schemas/BotCycling'

    Page:
      type: object
      description: Page information
      properties:
        page:
          type: integer
          description: Requested page number (starting from 0)
          example: 0
        size:
          type: integer
          description: Amount of item on page
          example: 20
        sort:
          type: string
          description: Order of items on page
          example: '"[ status:asc, name:desc ]"'

    PatchCredentialsRequest:
      type: object
      required:
        - credentials
        - accountId
      properties:
        credentials:
          type: string
          description: Credentials json
          example: {}
        accountId:
          type: string
          format: uuid
          example: 0dd81a58-2377-4c66-b155-0a0c6c42ed34
          description: Account ID

    PatchCredentialsResponse:
      type: object
      required:
        - ids
      properties:
        ids:
          type: array
          description: List of updated bot's id's
          items:
            type: string
            format: uuid
            description: Id of updated bot
            example: cccf06d4-441d-4388-9bcf-14810af5802b

    BotTypesResponse:
      type: object
      description: Bot Types Screen Response
      properties:
        totalProfit:
          type: number
          example: 479.5
          description: Account total profit
          default: 0.0
        realizedPnl:
          type: number
          example: 123.45
          description: Account realized profit
          default: 0.0
        gridPnl:
          type: number
          example: 123.45
          description: Account grid profit
          default: 0.0
        currency:
          type: string
          example: USDT
          description: Profile default currency
        futuresGrid:
          $ref: '#/components/schemas/BotTypeItem'
        spotGrid:
          $ref: '#/components/schemas/BotTypeItem'

    BotTypeItem:
      type: object
      required:
        - name
        - activeTotal
        - archivedTotal
      properties:
        name:
          type: string
          description: Type name
          example: FUTURES_GRID
        activeTotal:
          type: integer
          description: Amount of active bots
          example: 12
        archivedTotal:
          type: integer
          description: Amount of archived bots
          example: 12

    BotCheckAvailabilityResponse:
      type: object
      required:
        - activeBotsAmount
        - availableBotsAmount
      properties:
        activeBotsAmount:
          type: integer
          description: Active bots amount
          example: 20
        availableBotsAmount:
          type: integer
          description: Amount of bots available for creation
          example: 25

    BotCycling:
      type: object
      required:
        - id
        - quote
        - base
        - status
        - minPrice
        - maxPrice
        - cycleStatus
        - gridType
        - initialAmount
        - gridDirection
        - accountId
        - priceStep
        - initialPrice
        - initialGrids
        - leverage
        - profileId
        - currencyType
        - market
        - closingAtInitialPrice
        - currentOpenPositionAmount
        - isAutoManaged
        - ticker
        - orderAmount
        - currentPrice
      properties:
        id:
          type: string
          format: uuid
          example: 72facdec-7cd2-401e-ae00-2cefd8c8bfeb
          description: Bot identifier
        quote:
          type: string
          example: BTC
          description: Quote currency
        base:
          type: string
          example: USDT
          description: Base currency
        status:
          $ref: '#/components/schemas/BotStatus'
        minPrice:
          type: number
          default: Price range minimum value
          example: 64342.58
        maxPrice:
          type: number
          default: Price range maximum value
          example: 72548.11
        cycleStatus:
          type: string
          example: READY
          description: Status of bot cycling
          enum:
            - READY
            - CYCLING
        gridType:
          type: string
          example: GEOMETRIC
          description: Bot grid type
        initialAmount:
          type: number
          example: 123.45
          description: Investment amount
        gridDirection:
          type: string
          example: LONG
          enum:
            - LONG
            - SHORT
            - CENTRAL
          description: Grid direction
        accountId:
          type: string
          format: uuid
          example: 72facdec-7cd2-401e-ae00-2cefd8c8bfeb
          description: Account identifier
        profileId:
          type: string
          format: uuid
          example: 72facdec-7cd2-401e-ae00-2cefd8c8bfeb
          description: Profile identifier
        priceStep:
          type: number
          example: 123.45
          description: Bot price step
        initialPrice:
          type: number
          example: 123.45
          description: Investment price
        initialGrids:
          type: integer
          example: 10
          description: Investment grids amount
        leverage:
          type: number
          example: 10
          description: Leverage value
        startTime:
          type: string
          example: 2024-04-21T13:26:44.148
          description: Bot start time
        lastCycleStart:
          type: string
          example: 2024-04-21T13:26:44.148
          description: Used by a background job to determine if there are bots that are active but have not been cycling for a long time
        currencyType:
          type: string
          example: QUOTE
          description: Type of source currency
          enum:
            - BASE
            - QUOTE
        market:
          type: string
          example: BYBIT
          description: Exchange name
        closingAtInitialPrice:
          type: boolean
          example: false
          description: A boolean representing a setting for order replacement
        botState:
          type: string
          example: { }
          description: Special field to store additional info about bot as json
        customGridParams:
          type: array
          items:
            $ref: '#/components/schemas/CustomGridSettings'
        currentPosition:
          type: number
          description: Signed value of current order position
          example: 123.45
        whitelist:
          type: string
          description: Allowed addresses for market interactions
          example: { }
        credentials:
          type: string
          description: User market credentials
          example: { }
          nullable: true
        isDemo:
          type: boolean
          description: Demo mode state
          example: false
        isAutoManaged:
          type: boolean
          description: Determines if the bot was created manually or by autobot
          example: false
        ticker:
          type: string
          description: Currency ticker value/identifier
          example: 4ngt893b3byutb903f43f4dsv
        orderAmount:
          type: number
          description: Amount of each order related to current bot
          example: 10.5
        currentPrice:
          type: number
          description: Current price
          example: 123.45
        orders:
          type: array
          description: List of bot's orders
          items:
            $ref: '#/components/schemas/OrderCycling'

    OrderCycling:
      type: object
      required:
        - id
        - price
        - amount
        - status
        - type
        - side
        - priceType
        - externalOrderId
        - currentOpenAmount
        - amountReplacedBySubstituteOrder
        - creationDate
        - updateDate
        - correspondingOpenPrice
        - avgFillPrice
      properties:
        id:
          type: string
          format: uuid
          example: 72facdec-7cd2-401e-ae00-2cefd8c8bfeb
          description: Order identifier
        price:
          type: number
          example: 13.5
          description: On which price was the order made
        amount:
          type: number
          example: 145.90
          description: What amount of asset was ordered
        status:
          $ref: '#/components/schemas/OrderStatus'
        type:
          $ref: '#/components/schemas/OrderTypeEnum'
        side:
          type: string
          example: LONG
          description: Order side
          enum:
            - LONG
            - SHORT
        priceType:
          type: string
          example: LIMIT
          description: Type of order price
          enum:
            - LIMIT
            - MARKET
        externalOrderId:
          type: string
          example: ekdefwhyr2748tirjnr3bgfyui
          description: Order identifier on market
        currentOpenAmount:
          type: number
          example: 34.12
          description: Indicates non-executed order amount (used in case of partially executed orders)
        amountReplacedBySubstituteOrder:
          type: number
          example: 81.94
          description: Indicates sum of amount of substitute orders (used in case of partially executed orders)
        matchingOpenOrderId:
          type: string
          example: 18b7f49b-771f-4eee-9470-e0137dd8955e
          description: Identifier of order representation on market
        creationDate:
          type: string
          example: 2024-04-21T13:26:44.439
          description: Date and time when order was created
        updateDate:
          type: string
          example: 2024-04-21T13:26:44.439
          description: Date and time when order was updated
        correspondingOpenPrice:
          type: string
          example: 123.45
          description: Price of existing corresponding order
          default: -1
        customSettingId:
          type: string
          description: Custom setting id
        avgFillPrice:
          type: number
          example: 39.52
          description: Average order fill price

    CheckStrategyTimeframeResponse:
      type: object
      required:
        - isSuccessful
      properties:
        isSuccessful:
          type: boolean
          example: true
          description: If bot creation by strategy on current timeframe is available
        matchingBotId:
          type: string
          format: uuid
          example: 133960d3-dc2b-4760-9fe8-cf8d30ac44fe

    OrderStatus:
      type: string
      example: OPEN
      description: Order status
      enum:
        - OPEN
        - EXECUTED
        - PARTIALLY_FILLED
        - CANCELLED
        - REPLACING
        - CANCELLED_AND_REPLACED

    CustomGridSettings:
      type: object
      description: Extra grid parameters json
      required:
        - orderSide
        - openPrice
        - closePrice
        - amount
        - settingId
      properties:
        orderSide:
          type: string
          example: LONG
        openPrice:
          type: number
          example: 123.45
        closePrice:
          type: number
          example: 234.56
        amount:
          type: number
          example: 1234.56
        settingId:
          type: string
          example: 123
        doNotSubstitute:
          type: boolean
          example: false

    CheckAccountDeletionResponse:
      type: object
      required:
        - accountId
        - activeBotsCount
        - deletionAvailable
      properties:
        accountId:
          type: string
          format: uuid
          example: c989f0c9-8498-4328-88a6-e1e072569240
          description: Account Identifier
        activeBotsCount:
          type: integer
          example: 5
          description: Amount of active bots on current account
        deletionAvailable:
          type: boolean
          example: false
          description: Account deletion availability

    BotCreationRequest:
      type: object
      description: Creation required properties
      required:
        - base
        - quote
        - minPrice
        - maxPrice
        - botType
        - startPrice
        - initialGrids
        - initialAmount
        - initialAmountQuote
        - currencyType
        - gridDirection
        - leverage
        - gridType
        - priceStep
        - accountId
        - orderAmount
        - priceStepPercentage
      properties:
        base:
          type: string
          description: Base Asset Name
          example: BTC
        quote:
          type: string
          description: Quote Asset Name
          example: USDT
        minPrice:
          type: number
          default: Price range minimum value
          example: 64342.58
          minimum: 0.0
        maxPrice:
          type: number
          default: Price range maximum value
          example: 72548.11
        botType:
          type: string
          description: Bot Type
          enum:
            - FUTURES_GRID
            - SPOT_GRID
          example: FUTURES_GRID
        startPrice:
          type: number
          description: At what price will the Bot be started. Defaults to current market price.
          example: 57895.48
          minimum: 0.0
        initialGrids:
          type: integer
          description: Amount of grid layers. Has to be even for CENTRAL grid direction
          example: 10
          minimum: 0
        initialAmount:
          type: number
          description: Amount of assets to be used by the bot
          example: 23724.08
          minimum: 0.0
        initialAmountQuote:
          type: number
          default: Initial amount in quote equivalent
          example: 123.45
          minimum: 0.0
        currencyType:
          type: string
          description: Type of used currency
          example: QUOTE
          enum:
            - QUOTE
            - BASE
          default: QUOTE
        gridDirection:
          type: string
          description: Grid Direction
          enum:
            - LONG
            - CENTRAL
            - SHORT
          example: LONG
          default: CENTRAL
        leverage:
          type: number
          description: Leverage value
          example: 10
        gridType:
          type: string
          description: Type of grid layers progression
          default: ARITHMETIC
          enum:
            - ARITHMETIC
            - GEOMETRIC
          example: ARITHMETIC
        priceStep:
          type: number
          description: Value of the progression between each grid layer
          example: 1.10
        priceStepPercentage:
          type: string
          description: Range of price step values
          example: 3.33-5.55
        accountId:
          type: string
          format: uuid
          description: Account GUID
          example: e1b505e5-c3c8-497f-aa49-db6d515efc80
        isAutoManaged:
          type: boolean
          description: Defines if the bot is auto-managed
          example: false
          default: false
        orderAmount:
          type: number
          description: Order amount
          example: 123.45
        closingAtInitialPrice:
          type: boolean
          description: Whether create an alternative order in the center or not
          example: true
          default: false
        customGridSettings:
          type: array
          items:
            $ref: '#/components/schemas/CustomGridSettings'

    ExchangeEnum:
      type: string
      example: BYBIT
      description: Available exchanges
      enum:
        - BYBIT
        - BINANCE
        - OKX
        - REYA_DEX
        - AEVO

    OrderTypeEnum:
      type: string
      example: OPEN
      description: Order type
      enum:
        - OPEN
        - CLOSE
        - POSITION_CLOSE_ORDER
        - NO_LOSS_POSITION_CLOSE_ORDER
        - STRATEGY_POSITION_ORDER_OPEN
        - STRATEGY_POSITION_ORDER_CLOSE
